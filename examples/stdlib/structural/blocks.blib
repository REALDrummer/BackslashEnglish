use stdlib/number.beng.

unumber Indent Level := 0
final string Indentation Unit := /"(\n(\t|    ))?"/
define private <string> Indent: 
	Indentation Unit * (Indentation Level + 1)

define <Last Op's return type> (`Indent`<op Ops>)*`Indent`<op Last Op>:
	run Ops
	run Last Op

define <True Branch's return type or False Branch's return type> if <op=>bit Condition>, <code block True Branch> else, <code block False Branch>:
	bit Condition Result := run Condition
	NASM command* If Start := test Condition Result, Condition Result
	jz If False
	(True Branch's return type) Result := run True Branch using Condition  #< go to use Condition to run the body in case Condition defined new operators >#
	jmp If End
	NASM command* If False := nop
	(False Branch's return type) Result := run False Branch using Condition
	NASM command* If End := nop
	Result

define <type of error> missing else error:
	a new type of error saying "Someone didn't put an else block after an if where the return value is used!"

define <(True Branch's return type)?> if <bit Condition>,? <code block True Branch>:
	if Condition,
		run True Branch
	else,
		a new missing else error
